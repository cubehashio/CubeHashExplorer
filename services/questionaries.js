
const CONST = require('./const.js')

const db = require('../diskdb.js')

module.exports = ($scope) => {
  web3 = $scope.web3

  return {

    generate: function(query, cb, req){

      var accobj = CONST.checkLoginForApi(web3, req, cb)
      
      var rsContrat = new web3.eth.Contract(questionariesContractAbi)

      
      var _attributes     = new Array(3,0,9,2,3,4)
      var _certification  = 'test'
//      _attributes = makeArray(query)
		
	  console.log('the accobj is : ', accobj)

      rsContrat.deploy({
        data: questionariesContractData,
        arguments:[_attributes, _certification],
      })
      .send({
        from: accobj.address,
        gas: 1500000,
        gasPrice: '0',
        chainId: 5816,
      }, function(error, transactionHash) {

      })
      .on('error', function(error) {
        console.log('error:')
        console.log(error)
      })
      .on('transactionHash', function(transactionHash) {
        console.log('transactionHash: ', transactionHash)
      })
      .on('receipt', function(receipt) {
        console.log(receipt.contractAddress)
      })
    }
  }
}

function makeArray() {
  return new Promise( (success, error) => {
    
  })
}

const questionariesContractAbi = [
	{
		"constant": false,
		"inputs": [
			{
				"name": "_i",
				"type": "uint8"
			},
			{
				"name": "_j",
				"type": "uint8"
			}
		],
		"name": "callVotes",
		"outputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [],
		"name": "renounceOwnership",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "transferOwnership",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "_result",
				"type": "uint8[]"
			}
		],
		"name": "vote",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"name": "_attributes",
				"type": "uint256[]"
			},
			{
				"name": "_certification",
				"type": "string"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"payable": true,
		"stateMutability": "payable",
		"type": "fallback"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"name": "",
				"type": "address"
			}
		],
		"name": "Vote",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"name": "previousOwner",
				"type": "address"
			},
			{
				"indexed": true,
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "OwnershipTransferred",
		"type": "event"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"name": "attributes",
		"outputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "callResult",
		"outputs": [
			{
				"name": "",
				"type": "uint256[]"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "certification",
		"outputs": [
			{
				"name": "",
				"type": "string"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "isOwner",
		"outputs": [
			{
				"name": "",
				"type": "bool"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"name": "",
				"type": "address"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	}
]

const questionariesContractData = "0x608060405234801561001057600080fd5b50604051610aa5380380610aa58339810180604052604081101561003357600080fd5b81019080805164010000000081111561004b57600080fd5b8201602081018481111561005e57600080fd5b815185602082028301116401000000008211171561007b57600080fd5b5050929190602001805164010000000081111561009757600080fd5b820160208101848111156100aa57600080fd5b81516401000000008111828201871017156100c457600080fd5b505060008054600160a060020a0319163317808255604051929550600160a060020a0316935091507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38151610124906003906020850190610140565b50805161013890600490602084019061018b565b505050610215565b82805482825590600052602060002090810192821561017b579160200282015b8281111561017b578251825591602001919060010190610160565b506101879291506101f8565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101cc57805160ff191683800117855561017b565b8280016001018555821561017b579182018281111561017b578251825591602001919060010190610160565b61021291905b8082111561018757600081556001016101fe565b90565b610881806102246000396000f3fe6080604052600436106100985763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631247ab2181146100b6578063715018a6146101665780638da5cb5b1461017b5780638f32d59b146101ac57806393453282146101d5578063b3f78be01461023a578063d05dcc6a146102c4578063ee6ca81c14610300578063f2fde38b14610335575b6100a0610368565b600160a060020a031633146100b457600080fd5b005b3480156100c257600080fd5b506100b4600480360360208110156100d957600080fd5b8101906020810181356401000000008111156100f457600080fd5b82018360208201111561010657600080fd5b8035906020019184602083028401116401000000008311171561012857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610377945050505050565b34801561017257600080fd5b506100b46104a4565b34801561018757600080fd5b50610190610368565b60408051600160a060020a039092168252519081900360200190f35b3480156101b857600080fd5b506101c161050e565b604080519115158252519081900360200190f35b3480156101e157600080fd5b506101ea61051f565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561022657818101518382015260200161020e565b505050509050019250505060405180910390f35b34801561024657600080fd5b5061024f6106e7565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610289578181015183820152602001610271565b50505050905090810190601f1680156102b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d057600080fd5b506102ee600480360360208110156102e757600080fd5b5035610775565b60408051918252519081900360200190f35b34801561030c57600080fd5b506102ee6004803603604081101561032357600080fd5b5060ff81358116916020013516610794565b34801561034157600080fd5b506100b46004803603602081101561035857600080fd5b5035600160a060020a03166107b9565b600054600160a060020a031690565b3360009081526002602052604090205460ff16156103f657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f596f75206861766520616c726561647920766f7465642e000000000000000000604482015290519081900360640190fd5b60005b81518160ff1610156104515760ff81166000818152600160205260408120845190928591811061042557fe5b602090810290910181015160ff16825281019190915260400160002080546001908101909155016103f9565b5033600081815260026020908152604091829020805460ff19166001179055815192835290517ff5b08346e1e6b0b55d07ce94e81fcb198d47fbbecfea3b9a476f454c86761ec49281900390910190a150565b6104ac61050e565b15156104b757600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a0316331490565b60608060006003600281548110151561053457fe5b906000526020600020015490508060405190808252806020026020018201604052801561056b578160200160208202803883390190505b50600380549193508291600190811061058057fe5b90600052602060002001546000141561063d5760005b6003805460009081106105a557fe5b90600052602060002001548160ff1610156106375760005b6003805460ff848301169081106105d057fe5b90600052602060002001548160ff16101561062e5760ff8083166000908152600160209081526040808320938516835292905220548551869085870390811061061557fe5b60209081029091010152600019909201916001016105bd565b50600101610596565b506106df565b60005b60038054600090811061064f57fe5b90600052602060002001548160ff1610156106dd5760005b60038054600190811061067657fe5b90600052602060002001548160ff1610156106d45760ff808316600090815260016020908152604080832093851683529290522054855186908587039081106106bb57fe5b6020908102909101015260001990920191600101610667565b50600101610640565b505b509091505090565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561076d5780601f106107425761010080835404028352916020019161076d565b820191906000526020600020905b81548152906001019060200180831161075057829003601f168201915b505050505081565b600380548290811061078357fe5b600091825260209091200154905081565b60ff918216600090815260016020908152604080832093909416825291909152205490565b6107c161050e565b15156107cc57600080fd5b6107d5816107d8565b50565b600160a060020a03811615156107ed57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a7230582059aa0a8f2699f6d089f571dfd0b83958aef82cfe7ada0b1d85c07ae1977251770029"




